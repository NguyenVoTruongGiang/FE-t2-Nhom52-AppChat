{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\component\\\\ChatContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport MessageInput from \"./MessageInput\";\nimport UserInitializer from \"./UserInitializer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatContainer({\n  messages,\n  sendMessage\n}) {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const handleUserSelect = userId => {\n    setSelectedUser(userId);\n  };\n  useEffect(() => {\n    // Nếu đã chọn người dùng và tồn tại tin nhắn từ người đó\n    if (selectedUser) {\n      const filteredMessages = messages.filter(message => message.sender === selectedUser || message.recipient === selectedUser);\n      setCurrentUserMessages(filteredMessages);\n      const foundUser = filteredMessages.find(message => message.sender === selectedUser);\n      setCurrentUser(foundUser ? foundUser.sender : \"\");\n    }\n  }, [selectedUser, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(UserInitializer, {\n          onUserSelect: handleUserSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-user\",\n          children: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), currentUserMessages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          text: message.text,\n          sender: message.sender\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatContainer, \"OBLuvDkfmVL0rbvPXfYGkxvgniQ=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","Message","MessageInput","UserInitializer","jsxDEV","_jsxDEV","ChatContainer","messages","sendMessage","_s","selectedUser","setSelectedUser","currentUserMessages","setCurrentUserMessages","currentUser","setCurrentUser","handleUserSelect","userId","filteredMessages","filter","message","sender","recipient","foundUser","find","className","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","map","index","text","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/component/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport UserInitializer from \"./UserInitializer\";\r\n\r\nfunction ChatContainer({ messages, sendMessage }) {\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  const handleUserSelect = (userId) => {\r\n    setSelectedUser(userId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Nếu đã chọn người dùng và tồn tại tin nhắn từ người đó\r\n    if (selectedUser) {\r\n      const filteredMessages = messages.filter(\r\n        (message) => message.sender === selectedUser || message.recipient === selectedUser\r\n      );\r\n      setCurrentUserMessages(filteredMessages);\r\n      const foundUser = filteredMessages.find((message) => message.sender === selectedUser);\r\n      setCurrentUser(foundUser ? foundUser.sender : \"\");\r\n    }\r\n  }, [selectedUser, messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"show-chat\">\r\n        <div className=\"user-info\">\r\n          <UserInitializer onUserSelect={handleUserSelect} />\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          {/* Hiển thị tên người dùng hiện tại */}\r\n          <div className=\"current-user\">{currentUser}</div>\r\n          {currentUserMessages.map((message, index) => (\r\n            <Message key={index} text={message.text} sender={message.sender} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <MessageInput sendMessage={sendMessage} selectedUser={selectedUser} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}