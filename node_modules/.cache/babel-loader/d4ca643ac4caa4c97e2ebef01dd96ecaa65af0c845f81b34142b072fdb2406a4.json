{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\component\\\\ChatContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useWebSocket from './useWebSocket';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  currentUser\n}) => {\n  _s();\n  const {\n    messages,\n    sendMessage,\n    addUser\n  } = useWebSocket(currentUser);\n  const [selectedUser, setSelectedUser] = useState(null);\n  useEffect(() => {\n    console.log('Selected user changed:', selectedUser);\n  }, [selectedUser]);\n  const handleSend = message => {\n    if (selectedUser) {\n      sendMessage(JSON.stringify({\n        action: \"onchat\",\n        data: {\n          event: \"SEND_MESSAGE\",\n          data: {\n            to: selectedUser,\n            message\n          }\n        }\n      }));\n    } else {\n      console.error('No user selected for sending message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSend: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"ZyjPiKBfeI5a/jVohUXqqxEbQLg=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","useWebSocket","Message","MessageInput","jsxDEV","_jsxDEV","ChatContainer","currentUser","_s","messages","sendMessage","addUser","selectedUser","setSelectedUser","console","log","handleSend","message","JSON","stringify","action","data","event","to","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSend","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/component/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport useWebSocket from './useWebSocket';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\n\r\nconst ChatContainer = ({ currentUser }) => {\r\n  const { messages, sendMessage, addUser } = useWebSocket(currentUser);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Selected user changed:', selectedUser);\r\n  }, [selectedUser]);\r\n\r\n  const handleSend = (message) => {\r\n    if (selectedUser) {\r\n      sendMessage(\r\n        JSON.stringify({\r\n          action: \"onchat\",\r\n          data: {\r\n            event: \"SEND_MESSAGE\",\r\n            data: {\r\n              to: selectedUser,\r\n              message,\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      console.error('No user selected for sending message.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat</h2>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} message={msg} />\r\n        ))}\r\n      </div>\r\n      <MessageInput onSend={handleSend} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGV,YAAY,CAACM,WAAW,CAAC;EACpE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,YAAY,CAAC;EACrD,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMI,UAAU,GAAIC,OAAO,IAAK;IAC9B,IAAIL,YAAY,EAAE;MAChBF,WAAW,CACTQ,IAAI,CAACC,SAAS,CAAC;QACbC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE;UACJC,KAAK,EAAE,cAAc;UACrBD,IAAI,EAAE;YACJE,EAAE,EAAEX,YAAY;YAChBK;UACF;QACF;MACF,CAAC,CACH,CAAC;IACH,CAAC,MAAM;MACLH,OAAO,CAACU,KAAK,CAAC,uCAAuC,CAAC;IACxD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbxB,OAAA;MAAAoB,QAAA,EACGhB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB3B,OAAA,CAACH,OAAO;QAAae,OAAO,EAAEc;MAAI,GAApBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA,CAACF,YAAY;MAAC8B,MAAM,EAAEjB;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtCIF,aAAa;EAAA,QAC0BL,YAAY;AAAA;AAAAiC,EAAA,GADnD5B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}