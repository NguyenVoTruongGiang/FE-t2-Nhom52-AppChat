{"ast":null,"code":"var _jsxFileName = \"E:\\\\workspace\\\\FE-t2-Nhom52-AppChat\\\\src\\\\component\\\\ChatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport \"../App.css\";\nimport useWebSocket from \"../hooks/useWebSocket\";\nimport ChatComponent from \"./chatComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const {\n    sendChatMessage\n  } = useWebSocket(currentUser);\n  const [selectedUser] = useState(null);\n  const [chatType] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiClick = (event, emojiObject) => {\n    setMessageInput(prev => prev + emojiObject.emoji);\n  };\n  const handleClickSend = () => {\n    if (selectedUser) {\n      sendChatMessage(selectedUser, messageInput, chatType);\n      setMessageInput(\"\");\n    } else {\n      alert(\"Please select a user to send the message.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatComponent, {\n      currentUser: currentUser,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-icon\",\n        onClick: toggleEmojiPicker,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSmile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onEmojiClick: handleEmojiClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClickSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"YURzT0jme/RyVXeO/I/wd6Y/u6E=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faSmile","EmojiPicker","useWebSocket","ChatComponent","jsxDEV","_jsxDEV","ChatContainer","currentUser","onLogout","_s","sendChatMessage","selectedUser","chatType","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","toggleEmojiPicker","handleEmojiClick","event","emojiObject","prev","emoji","handleClickSend","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onEmojiClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/workspace/FE-t2-Nhom52-AppChat/src/component/ChatContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport \"../App.css\";\r\nimport useWebSocket from \"../hooks/useWebSocket\";\r\nimport ChatComponent from \"./chatComponent\";\r\n\r\nconst ChatContainer = ({ currentUser, onLogout }) => {\r\n  const { sendChatMessage } = useWebSocket(currentUser);\r\n  const [selectedUser] = useState(null);\r\n  const [chatType] = useState(\"\");\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    setMessageInput((prev) => prev + emojiObject.emoji);\r\n  };\r\n\r\n  const handleClickSend = () => {\r\n    if (selectedUser) {\r\n      sendChatMessage(selectedUser, messageInput, chatType);\r\n      setMessageInput(\"\");\r\n    } else {\r\n      alert(\"Please select a user to send the message.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <ChatComponent currentUser={currentUser} onLogout={onLogout}/>\r\n      <div className=\"chat-input\">\r\n        <div className=\"emoji-icon\" onClick={toggleEmojiPicker}>\r\n          <FontAwesomeIcon icon={faSmile} />\r\n        </div>\r\n        {showEmojiPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={messageInput}\r\n          onChange={(e) => setMessageInput(e.target.value)}\r\n        />\r\n        <button onClick={handleClickSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}