{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useWebSocket = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [clientUUID, setClientUUID] = useState(null);\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\n  useEffect(() => {\n    const newSocket = new WebSocket(\"url\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log('WebSocket kết nối thành công.');\n    };\n    newSocket.onmessage = event => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (receivedMessage.type === 'uuid') {\n          setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n        } else {\n          // Xử lý tin nhắn khác nếu cần\n        }\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error('Lỗi phân tích tin nhắn từ server:', error);\n      }\n    };\n    newSocket.onclose = () => {\n      console.log('WebSocket đã đóng.');\n    };\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, [url]);\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(message);\n    } else {\n      console.error('WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.');\n    }\n  };\n  return {\n    messages,\n    sendMessage,\n    clientUUID\n  };\n};\n_s(useWebSocket, \"g7cQQ4iWOfJmd+zgLBoeclcDwL8=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","_s","messages","setMessages","socket","setSocket","clientUUID","setClientUUID","url","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","type","uuid","prevMessages","error","onclose","readyState","OPEN","close","sendMessage","message","send"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useWebSocket = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const [clientUUID, setClientUUID] = useState(null);\r\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\r\n\r\n  useEffect(() => {\r\n    const newSocket = new WebSocket(\"url\");\r\n    setSocket(newSocket);\r\n\r\n    newSocket.onopen = () => {\r\n      console.log('WebSocket kết nối thành công.');\r\n    };\r\n\r\n    newSocket.onmessage = (event) => {\r\n      try {\r\n        const receivedMessage = JSON.parse(event.data);\r\n        if (receivedMessage.type === 'uuid') {\r\n          setClientUUID(receivedMessage.uuid); // Lưu UUID của client\r\n        } else {\r\n          // Xử lý tin nhắn khác nếu cần\r\n        }\r\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n      } catch (error) {\r\n        console.error('Lỗi phân tích tin nhắn từ server:', error);\r\n      }\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log('WebSocket đã đóng.');\r\n    };\r\n\r\n    return () => {\r\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n        newSocket.close();\r\n      }\r\n    };\r\n  }, [url]);\r\n\r\n  const sendMessage = (message) => {\r\n    if (socket && socket.readyState === WebSocket.OPEN) {\r\n      socket.send(message);\r\n    } else {\r\n      console.error('WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.');\r\n    }\r\n  };\r\n\r\n  return { messages, sendMessage, clientUUID };\r\n};\r\n\r\nexport default useWebSocket;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMU,GAAG,GAAG,oCAAoC;EAEhDT,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,IAAIC,SAAS,CAAC,KAAK,CAAC;IACtCL,SAAS,CAACI,SAAS,CAAC;IAEpBA,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/B,IAAI;QACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QAC9C,IAAIH,eAAe,CAACI,IAAI,KAAK,MAAM,EAAE;UACnCb,aAAa,CAACS,eAAe,CAACK,IAAI,CAAC,CAAC,CAAC;QACvC,CAAC,MAAM;UACL;QAAA;QAEFlB,WAAW,CAAEmB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEN,eAAe,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDd,SAAS,CAACe,OAAO,GAAG,MAAM;MACxBZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,OAAO,MAAM;MACX,IAAIJ,SAAS,IAAIA,SAAS,CAACgB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;QACxDjB,SAAS,CAACkB,KAAK,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,CAACnB,GAAG,CAAC,CAAC;EAET,MAAMoB,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAIzB,MAAM,IAAIA,MAAM,CAACqB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;MAClDtB,MAAM,CAAC0B,IAAI,CAACD,OAAO,CAAC;IACtB,CAAC,MAAM;MACLjB,OAAO,CAACW,KAAK,CAAC,0DAA0D,CAAC;IAC3E;EACF,CAAC;EAED,OAAO;IAAErB,QAAQ;IAAE0B,WAAW;IAAEtB;EAAW,CAAC;AAC9C,CAAC;AAACL,EAAA,CAhDID,YAAY;AAkDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}