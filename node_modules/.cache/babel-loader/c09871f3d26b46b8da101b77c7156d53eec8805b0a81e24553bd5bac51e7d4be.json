{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\component\\\\ChatContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\nimport EmojiPicker from 'emoji-picker-react';\nimport \"../App.css\";\nimport useWebSocket from \"../hooks/useWebSocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = ({\n  currentUser,\n  onLogout\n}) => {\n  _s();\n  const {\n    messages,\n    sendChatMessage,\n    users,\n    addUser\n  } = useWebSocket(currentUser);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [chatType, setChatType] = useState(\"people\");\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\n  const [newUser, setNewUser] = useState(\"\");\n  const [selectedUserName, setSelectedUserName] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  useEffect(() => {\n    if (selectedUser) {\n      const filteredMessages = messages.filter(message => {\n        var _message$data;\n        const data = (_message$data = message.data) === null || _message$data === void 0 ? void 0 : _message$data.data;\n        if (chatType === \"people\") {\n          return data && (data.sender === selectedUser && data.recipient === currentUser || data.sender === currentUser && data.recipient === selectedUser);\n        } else if (chatType === \"group\") {\n          return data && data.to === selectedUser;\n        }\n        return false;\n      });\n      setCurrentUserMessages(filteredMessages);\n    }\n  }, [selectedUser, messages, chatType, currentUser]);\n  const handleAddUser = () => {\n    if (newUser.trim()) {\n      addUser(newUser);\n      setNewUser(\"\");\n    }\n  };\n  const handleSelectUser = (user, type = \"people\") => {\n    setSelectedUser(user);\n    setSelectedUserName(user);\n    setChatType(type);\n  };\n  const handleLogout = () => {\n    onLogout();\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiClick = (event, emojiObject) => {\n    setMessageInput(prev => prev + emojiObject.emoji);\n  };\n  const handleClickSend = () => {\n    if (selectedUser) {\n      sendChatMessage(chatType, selectedUser, messageInput);\n      setMessageInput(\"\");\n    } else {\n      alert(\"Please select a user to send the message.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji-icon\",\n        onClick: toggleEmojiPicker,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSmile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onEmojiClick: handleEmojiClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClickSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"KskJl/Hjnz2p7LjcxI1xYsXLYz8=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","Message","FontAwesomeIcon","faSmile","EmojiPicker","useWebSocket","jsxDEV","_jsxDEV","ChatContainer","currentUser","onLogout","_s","messages","sendChatMessage","users","addUser","selectedUser","setSelectedUser","chatType","setChatType","currentUserMessages","setCurrentUserMessages","newUser","setNewUser","selectedUserName","setSelectedUserName","messageInput","setMessageInput","showEmojiPicker","setShowEmojiPicker","filteredMessages","filter","message","_message$data","data","sender","recipient","to","handleAddUser","trim","handleSelectUser","user","type","handleLogout","toggleEmojiPicker","handleEmojiClick","event","emojiObject","prev","emoji","handleClickSend","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onEmojiClick","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/component/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport \"../App.css\";\r\nimport useWebSocket from \"../hooks/useWebSocket\";\r\n\r\nconst ChatContainer = ({ currentUser, onLogout }) => {\r\n  const { messages, sendChatMessage, users, addUser } = useWebSocket(currentUser);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [chatType, setChatType] = useState(\"people\");\r\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\r\n  const [newUser, setNewUser] = useState(\"\");\r\n  const [selectedUserName, setSelectedUserName] = useState(\"\");\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      const filteredMessages = messages.filter((message) => {\r\n        const data = message.data?.data;\r\n        if (chatType === \"people\") {\r\n          return (\r\n            data &&\r\n            ((data.sender === selectedUser && data.recipient === currentUser) ||\r\n            (data.sender === currentUser && data.recipient === selectedUser))\r\n          );\r\n        } else if (chatType === \"group\") {\r\n          return (\r\n            data &&\r\n            data.to === selectedUser\r\n          );\r\n        }\r\n        return false;\r\n      });\r\n      setCurrentUserMessages(filteredMessages);\r\n    }\r\n  }, [selectedUser, messages, chatType, currentUser]);\r\n\r\n  const handleAddUser = () => {\r\n    if (newUser.trim()) {\r\n      addUser(newUser);\r\n      setNewUser(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSelectUser = (user, type = \"people\") => {\r\n    setSelectedUser(user);\r\n    setSelectedUserName(user);\r\n    setChatType(type);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    onLogout();\r\n  };\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    setMessageInput((prev) => prev + emojiObject.emoji);\r\n  };\r\n\r\n  const handleClickSend = () => {\r\n    if (selectedUser) {\r\n      sendChatMessage(chatType, selectedUser, messageInput);\r\n      setMessageInput(\"\");\r\n    } else {\r\n      alert(\"Please select a user to send the message.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"show-chat\">\r\n        {/* Các phần khác giữ nguyên */}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <div className=\"emoji-icon\" onClick={toggleEmojiPicker}>\r\n          <FontAwesomeIcon icon={faSmile} />\r\n        </div>\r\n        {showEmojiPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={messageInput}\r\n          onChange={(e) => setMessageInput(e.target.value)}\r\n        />\r\n        <button onClick={handleClickSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}