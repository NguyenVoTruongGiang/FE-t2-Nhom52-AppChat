{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport UserList from \"./component/UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Tạo danh sách người dùng\n  const initialUsers = [{\n    id: 1,\n    name: \"User 1\"\n  }, {\n    id: 2,\n    name: \"User 2\"\n  }, {\n    id: 3,\n    name: \"User 3\"\n  }, {\n    id: 4,\n    name: \"User 4\"\n  }, {\n    id: 5,\n    name: \"User 5\"\n  }, {\n    id: 6,\n    name: \"User 6\"\n  }, {\n    id: 7,\n    name: \"User 7\"\n  }, {\n    id: 8,\n    name: \"User 8\"\n  }, {\n    id: 9,\n    name: \"User 9\"\n  }, {\n    id: 10,\n    name: \"User 10\"\n  }];\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = event => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n    };\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\"\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      users: initialUsers,\n      onSelectUser: handleSelectUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(ChatContainer, {\n      messages: messages,\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYTLAvljO+ic42PlR49YUwHUelI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","UserList","jsxDEV","_jsxDEV","App","_s","messages","setMessages","socket","setSocket","selectedUser","setSelectedUser","initialUsers","id","name","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","prevMessages","close","sendMessage","text","selectedEmoji","readyState","OPEN","message","timestamp","Date","toISOString","sender","send","stringify","handleSelectUser","user","className","children","users","onSelectUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport UserList from \"./component/UserList\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  \n  // Tạo danh sách người dùng\n  const initialUsers = [\n    { id: 1, name: \"User 1\" },\n    { id: 2, name: \"User 2\" },\n    { id: 3, name: \"User 3\" },\n    { id: 4, name: \"User 4\" },\n    { id: 5, name: \"User 5\" },\n    { id: 6, name: \"User 6\" },\n    { id: 7, name: \"User 7\" },\n    { id: 8, name: \"User 8\" },\n    { id: 9, name: \"User 9\" },\n    { id: 10, name: \"User 10\" },\n  ];\n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = (event) => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n    };\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n\n  const handleSelectUser = (user) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <div className=\"App\">\n      <UserList users={initialUsers} onSelectUser={handleSelectUser} />\n      {selectedUser && (\n        <ChatContainer\n          messages={messages}\n          sendMessage={sendMessage}\n          selectedUser={selectedUser}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}