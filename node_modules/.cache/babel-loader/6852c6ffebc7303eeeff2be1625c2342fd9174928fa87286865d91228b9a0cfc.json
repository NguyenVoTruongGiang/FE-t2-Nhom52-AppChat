{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport UserList from \"./component/UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = event => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n\n      // Thêm người gửi tin nhắn vào danh sách người dùng nếu chưa tồn tại\n      const sender = receivedMessage.sender;\n      if (!users.some(user => user.id === sender)) {\n        setUsers(prevUsers => [...prevUsers, {\n          id: sender,\n          name: sender\n        }]);\n      }\n    };\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\"\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onSelectUser: handleSelectUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(ChatContainer, {\n      messages: messages,\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ga9tBZSAj7kVrjJRaxWGMU+Ai/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","UserList","jsxDEV","_jsxDEV","App","_s","messages","setMessages","socket","setSocket","selectedUser","setSelectedUser","users","setUsers","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","prevMessages","sender","some","user","id","prevUsers","name","close","sendMessage","text","selectedEmoji","readyState","OPEN","message","timestamp","Date","toISOString","send","stringify","handleSelectUser","className","children","onSelectUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport UserList from \"./component/UserList\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = (event) => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n\n      // Thêm người gửi tin nhắn vào danh sách người dùng nếu chưa tồn tại\n      const sender = receivedMessage.sender;\n      if (!users.some(user => user.id === sender)) {\n        setUsers(prevUsers => [...prevUsers, { id: sender, name: sender }]);\n      }\n    };\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n\n  const handleSelectUser = (user) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <div className=\"App\">\n      <UserList users={users} onSelectUser={handleSelectUser} />\n      {selectedUser && (\n        <ChatContainer\n          messages={messages}\n          sendMessage={sendMessage}\n          selectedUser={selectedUser}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}