{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./component/Login\";\nimport SignUp from \"./component/SignUp\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  // const [clientUUID, setClientUUID] = useState(null);\n  const [currentScreen, setCurrentScreen] = useState(\"login\");\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket kết nối thành công.\");\n    };\n    socket.addEventListener('message', function (event) {\n      console.log('Message from server:', event.data);\n    });\n    newSocket.onmessage = event => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        // if (receivedMessage.type === 'uuid') {\n        //   setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n        // } else {\n        //   // Xử lý tin nhắn khác nếu cần\n        // }\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error(\"Lỗi phân tích tin nhắn từ server:\", error);\n      }\n    };\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n  const sendMessage = (text, selectedEmoji) => {\n    if ((text.trim() !== \"\" || selectedEmoji !== null) && socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\"\n      };\n      socket.send(JSON.stringify(message));\n      setMessages(prevMessages => [...prevMessages, message]);\n    } else {\n      console.error(\"WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.\");\n    }\n  };\n  const handleLoginSuccess = () => {\n    setCurrentScreen(\"chat\"); // Chuyển sang trạng thái chat khi đăng nhập thành công\n  };\n  const handleSignUpClick = () => {\n    setCurrentScreen(\"signup\"); // Chuyển sang trạng thái đăng ký khi nhấn vào nút đăng ký\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [currentScreen === \"login\" && /*#__PURE__*/_jsxDEV(Login, {\n        onLoginSuccess: handleLoginSuccess,\n        onSignUpClick: handleSignUpClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }, this), currentScreen === \"signup\" && /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this), currentScreen === \"chat\" && /*#__PURE__*/_jsxDEV(ChatContainer, {\n        messages: messages,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ub9egswV4eLtG65pTAPF1vx7umc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","SignUp","ChatContainer","jsxDEV","_jsxDEV","App","_s","messages","setMessages","socket","setSocket","currentScreen","setCurrentScreen","newSocket","WebSocket","onopen","console","log","addEventListener","event","data","onmessage","receivedMessage","JSON","parse","prevMessages","error","readyState","OPEN","close","sendMessage","text","selectedEmoji","trim","message","timestamp","Date","toISOString","sender","send","stringify","handleLoginSuccess","handleSignUpClick","className","children","onLoginSuccess","onSignUpClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./component/Login\";\nimport SignUp from \"./component/SignUp\";\nimport ChatContainer from \"./component/ChatContainer\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  // const [clientUUID, setClientUUID] = useState(null);\n  const [currentScreen, setCurrentScreen] = useState(\"login\");\n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket kết nối thành công.\");\n    };\n\n    socket.addEventListener('message', function (event) {\n      console.log('Message from server:', event.data);\n    });\n\n    newSocket.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        // if (receivedMessage.type === 'uuid') {\n        //   setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n        // } else {\n        //   // Xử lý tin nhắn khác nếu cần\n        // }\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error(\"Lỗi phân tích tin nhắn từ server:\", error);\n      }\n    };\n\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    if (\n      (text.trim() !== \"\" || selectedEmoji !== null) &&\n      socket &&\n      socket.readyState === WebSocket.OPEN\n    ) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n      setMessages((prevMessages) => [...prevMessages, message]);\n    } else {\n      console.error(\"WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.\");\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    setCurrentScreen(\"chat\"); // Chuyển sang trạng thái chat khi đăng nhập thành công\n  };\n\n  const handleSignUpClick = () => {\n    setCurrentScreen(\"signup\"); // Chuyển sang trạng thái đăng ký khi nhấn vào nút đăng ký\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App\">\n      {/* Hiển thị các component tùy thuộc vào trạng thái hiện tại */}\n      {currentScreen === \"login\" && <Login onLoginSuccess={handleLoginSuccess} onSignUpClick={handleSignUpClick} />}\n      {currentScreen === \"signup\" && <SignUp />}\n      {currentScreen === \"chat\" && <ChatContainer messages={messages} sendMessage={sendMessage} />}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}