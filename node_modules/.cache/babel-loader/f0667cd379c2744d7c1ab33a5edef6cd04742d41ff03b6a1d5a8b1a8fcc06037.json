{"ast":null,"code":"useEffect(() => {\n  const newSocket = new WebSocket(url);\n  setSocket(newSocket);\n  newSocket.onopen = () => {\n    console.log(\"WebSocket connected successfully.\");\n  };\n  newSocket.onmessage = event => {\n    console.log('Received message from server:', event.data);\n    try {\n      const receivedMessage = JSON.parse(event.data);\n      console.log('Parsed message:', receivedMessage);\n      if (receivedMessage.status === \"success\") {\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      } else {\n        console.error('Received message with invalid structure:', receivedMessage);\n      }\n    } catch (error) {\n      console.error('Failed to send message to the server:', error);\n    }\n  };\n  newSocket.onclose = () => {\n    console.log(\"WebSocket closed.\");\n  };\n  return () => {\n    // Đóng kết nối WebSocket chỉ khi component unmount\n    if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n      newSocket.close();\n    }\n  };\n}, []);","map":{"version":3,"names":["useEffect","newSocket","WebSocket","url","setSocket","onopen","console","log","onmessage","event","data","receivedMessage","JSON","parse","status","setMessages","prevMessages","error","onclose","readyState","OPEN","close"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["useEffect(() => {\r\n  const newSocket = new WebSocket(url);\r\n  setSocket(newSocket);\r\n\r\n  newSocket.onopen = () => {\r\n    console.log(\"WebSocket connected successfully.\");\r\n  };\r\n\r\n  newSocket.onmessage = (event) => {\r\n    console.log('Received message from server:', event.data);\r\n    try {\r\n      const receivedMessage = JSON.parse(event.data);\r\n      console.log('Parsed message:', receivedMessage);\r\n      if (receivedMessage.status === \"success\") {\r\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n      } else {\r\n        console.error('Received message with invalid structure:', receivedMessage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to send message to the server:', error);\r\n    }\r\n  };\r\n\r\n  newSocket.onclose = () => {\r\n    console.log(\"WebSocket closed.\");\r\n  };\r\n\r\n  return () => {\r\n    // Đóng kết nối WebSocket chỉ khi component unmount\r\n    if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n      newSocket.close();\r\n    }\r\n  };\r\n}, []);\r\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,SAAS,GAAG,IAAIC,SAAS,CAACC,GAAG,CAAC;EACpCC,SAAS,CAACH,SAAS,CAAC;EAEpBA,SAAS,CAACI,MAAM,GAAG,MAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAClD,CAAC;EAEDN,SAAS,CAACO,SAAS,GAAIC,KAAK,IAAK;IAC/BH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAACC,IAAI,CAAC;IACxD,IAAI;MACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACC,IAAI,CAAC;MAC9CJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,eAAe,CAAC;MAC/C,IAAIA,eAAe,CAACG,MAAM,KAAK,SAAS,EAAE;QACxCC,WAAW,CAAEC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEL,eAAe,CAAC,CAAC;MACnE,CAAC,MAAM;QACLL,OAAO,CAACW,KAAK,CAAC,0CAA0C,EAAEN,eAAe,CAAC;MAC5E;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAEDhB,SAAS,CAACiB,OAAO,GAAG,MAAM;IACxBZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAED,OAAO,MAAM;IACX;IACA,IAAIN,SAAS,IAAIA,SAAS,CAACkB,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MACxDnB,SAAS,CAACoB,KAAK,CAAC,CAAC;IACnB;EACF,CAAC;AACH,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}