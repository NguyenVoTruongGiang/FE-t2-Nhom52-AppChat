{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nconst useWebSocket = url => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef(null);\n  const isConnectedRef = useRef(false);\n  useEffect(() => {\n    if (!socketRef.current) {\n      const newSocket = new WebSocket(url);\n      socketRef.current = newSocket;\n      newSocket.onopen = () => {\n        if (!isConnectedRef.current) {\n          console.log(\"WebSocket connected successfully.\");\n          isConnectedRef.current = true;\n        }\n      };\n      newSocket.onmessage = event => {\n        console.log('Received message from server:', event.data);\n        try {\n          const receivedMessage = JSON.parse(event.data);\n          console.log('Parsed message:', receivedMessage);\n          setMessages(prevMessages => [...prevMessages, receivedMessage]);\n        } catch (error) {\n          console.error('Failed to parse message from the server:', error);\n        }\n      };\n      newSocket.onclose = () => {\n        console.log(\"WebSocket closed.\");\n        socketRef.current = null;\n        isConnectedRef.current = false;\n      };\n      return () => {\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n          socketRef.current.close();\n        }\n      };\n    }\n  }, [url]);\n  const sendMessage = message => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(message);\n    } else {\n      console.error(\"WebSocket is not open.\");\n      // Thử kết nối lại WebSocket nếu nó không mở\n      if (!socketRef.current || socketRef.current.readyState === WebSocket.CLOSED) {\n        const newSocket = new WebSocket(url);\n        socketRef.current = newSocket;\n        newSocket.onopen = () => {\n          console.log(\"WebSocket reconnected successfully.\");\n          socketRef.current.send(message);\n        };\n      }\n    }\n  };\n  return {\n    messages,\n    sendMessage\n  };\n};\n_s(useWebSocket, \"3a8w8km563Uf4QM1WM2lbF9DwKU=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","useWebSocket","url","_s","messages","setMessages","socketRef","isConnectedRef","current","newSocket","WebSocket","onopen","console","log","onmessage","event","data","receivedMessage","JSON","parse","prevMessages","error","onclose","readyState","OPEN","close","sendMessage","message","send","CLOSED"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst useWebSocket = (url) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef(null);\r\n  const isConnectedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!socketRef.current) {\r\n      const newSocket = new WebSocket(url);\r\n      socketRef.current = newSocket;\r\n  \r\n      newSocket.onopen = () => {\r\n        if (!isConnectedRef.current) {\r\n          console.log(\"WebSocket connected successfully.\");\r\n          isConnectedRef.current = true;\r\n        }\r\n      };\r\n  \r\n      newSocket.onmessage = (event) => {\r\n        console.log('Received message from server:', event.data);\r\n        try {\r\n          const receivedMessage = JSON.parse(event.data);\r\n          console.log('Parsed message:', receivedMessage);\r\n          setMessages(prevMessages => [...prevMessages, receivedMessage]);\r\n        } catch (error) {\r\n          console.error('Failed to parse message from the server:', error);\r\n        }\r\n      };\r\n  \r\n      newSocket.onclose = () => {\r\n        console.log(\"WebSocket closed.\");\r\n        socketRef.current = null;\r\n        isConnectedRef.current = false;\r\n      };\r\n  \r\n      return () => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n          socketRef.current.close();\r\n        }\r\n      };\r\n    }\r\n  }, [url]);\r\n\r\n  const sendMessage = (message) => {\r\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n      socketRef.current.send(message);\r\n    } else {\r\n      console.error(\"WebSocket is not open.\");\r\n      // Thử kết nối lại WebSocket nếu nó không mở\r\n      if (!socketRef.current || socketRef.current.readyState === WebSocket.CLOSED) {\r\n        const newSocket = new WebSocket(url);\r\n        socketRef.current = newSocket;\r\n        newSocket.onopen = () => {\r\n          console.log(\"WebSocket reconnected successfully.\");\r\n          socketRef.current.send(message);\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  return { messages, sendMessage };\r\n};\r\n\r\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMM,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMQ,cAAc,GAAGR,MAAM,CAAC,KAAK,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,CAACE,OAAO,EAAE;MACtB,MAAMC,SAAS,GAAG,IAAIC,SAAS,CAACR,GAAG,CAAC;MACpCI,SAAS,CAACE,OAAO,GAAGC,SAAS;MAE7BA,SAAS,CAACE,MAAM,GAAG,MAAM;QACvB,IAAI,CAACJ,cAAc,CAACC,OAAO,EAAE;UAC3BI,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDN,cAAc,CAACC,OAAO,GAAG,IAAI;QAC/B;MACF,CAAC;MAEDC,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;QAC/BH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAACC,IAAI,CAAC;QACxD,IAAI;UACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACC,IAAI,CAAC;UAC9CJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,eAAe,CAAC;UAC/CZ,WAAW,CAACe,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEH,eAAe,CAAC,CAAC;QACjE,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdT,OAAO,CAACS,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE;MACF,CAAC;MAEDZ,SAAS,CAACa,OAAO,GAAG,MAAM;QACxBV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCP,SAAS,CAACE,OAAO,GAAG,IAAI;QACxBD,cAAc,CAACC,OAAO,GAAG,KAAK;MAChC,CAAC;MAED,OAAO,MAAM;QACX,IAAIF,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACE,OAAO,CAACe,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;UACxElB,SAAS,CAACE,OAAO,CAACiB,KAAK,CAAC,CAAC;QAC3B;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,MAAMwB,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAIrB,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACE,OAAO,CAACe,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MACxElB,SAAS,CAACE,OAAO,CAACoB,IAAI,CAACD,OAAO,CAAC;IACjC,CAAC,MAAM;MACLf,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;MACvC;MACA,IAAI,CAACf,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACE,OAAO,CAACe,UAAU,KAAKb,SAAS,CAACmB,MAAM,EAAE;QAC3E,MAAMpB,SAAS,GAAG,IAAIC,SAAS,CAACR,GAAG,CAAC;QACpCI,SAAS,CAACE,OAAO,GAAGC,SAAS;QAC7BA,SAAS,CAACE,MAAM,GAAG,MAAM;UACvBC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;UAClDP,SAAS,CAACE,OAAO,CAACoB,IAAI,CAACD,OAAO,CAAC;QACjC,CAAC;MACH;IACF;EACF,CAAC;EAED,OAAO;IAAEvB,QAAQ;IAAEsB;EAAY,CAAC;AAClC,CAAC;AAACvB,EAAA,CA5DIF,YAAY;AA8DlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}