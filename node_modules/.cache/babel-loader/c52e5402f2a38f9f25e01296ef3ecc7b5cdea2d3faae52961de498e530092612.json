{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import Login from \"./component/Login\";\n// import SignUp from \"./SignUp\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  // const [clientUUID, setClientUUID] = useState(null);\n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket kết nối thành công.\");\n    };\n    newSocket.onmessage = event => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (receivedMessage.type === 'uuid') {\n          setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n        } else {\n          // Xử lý tin nhắn khác nếu cần\n        }\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error(\"Lỗi phân tích tin nhắn từ server:\", error);\n      }\n    };\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n  const sendMessage = (text, selectedEmoji) => {\n    if ((text.trim() !== \"\" || selectedEmoji !== null) && socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\"\n      };\n      socket.send(JSON.stringify(message));\n      setMessages(prevMessages => [...prevMessages, message]);\n    } else {\n      console.error(\"WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      messages: messages,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0MbKzFx+OKNdOU5qFCjPjQZWhEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","jsxDEV","_jsxDEV","App","_s","messages","setMessages","socket","setSocket","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","type","setClientUUID","uuid","prevMessages","error","readyState","OPEN","close","sendMessage","text","selectedEmoji","trim","message","timestamp","Date","toISOString","sender","send","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import Login from \"./component/Login\";\n// import SignUp from \"./SignUp\";\nimport ChatContainer from \"./component/ChatContainer\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  // const [clientUUID, setClientUUID] = useState(null);\n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket kết nối thành công.\");\n    };\n    newSocket.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (receivedMessage.type === 'uuid') {\n          setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n        } else {\n          // Xử lý tin nhắn khác nếu cần\n        }\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error(\"Lỗi phân tích tin nhắn từ server:\", error);\n      }\n    };\n\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    if (\n      (text.trim() !== \"\" || selectedEmoji !== null) &&\n      socket &&\n      socket.readyState === WebSocket.OPEN\n    ) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n      setMessages((prevMessages) => [...prevMessages, message]);\n    } else {\n      console.error(\"WebSocket chưa được thiết lập hoặc chưa ở trạng thái mở.\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <ChatContainer messages={messages} sendMessage={sendMessage} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB;AACA;AACA,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,IAAIC,SAAS,CAAC,oCAAoC,CAAC;IACrEF,SAAS,CAACC,SAAS,CAAC;IAEpBA,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IACDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/B,IAAI;QACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QAC9C,IAAIH,eAAe,CAACI,IAAI,KAAK,MAAM,EAAE;UACnCC,aAAa,CAACL,eAAe,CAACM,IAAI,CAAC,CAAC,CAAC;QACvC,CAAC,MAAM;UACL;QAAA;QAEFhB,WAAW,CAAEiB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEP,eAAe,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAED,OAAO,MAAM;MACX,IAAIf,SAAS,IAAIA,SAAS,CAACgB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;QACxDjB,SAAS,CAACkB,KAAK,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,aAAa,KAAK;IAC3C,IACE,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAID,aAAa,KAAK,IAAI,KAC7CvB,MAAM,IACNA,MAAM,CAACkB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EACpC;MACA,MAAMM,OAAO,GAAG;QACdH,IAAI,EAAEA,IAAI,IAAIC,aAAa,GAAI,IAAGA,aAAc,EAAC,GAAG,EAAE,CAAC;QACvDG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,MAAM,EAAE;MACV,CAAC;MACD7B,MAAM,CAAC8B,IAAI,CAACpB,IAAI,CAACqB,SAAS,CAACN,OAAO,CAAC,CAAC;MACpC1B,WAAW,CAAEiB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAES,OAAO,CAAC,CAAC;IAC3D,CAAC,MAAM;MACLpB,OAAO,CAACY,KAAK,CAAC,0DAA0D,CAAC;IAC3E;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtC,OAAA,CAACF,aAAa;MAACK,QAAQ,EAAEA,QAAS;MAACuB,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACxC,EAAA,CAxDQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}