{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = event => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, receivedMessage]);\n    };\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\"\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: selectedUser && /*#__PURE__*/_jsxDEV(ChatContainer, {\n      messages: messages,\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYTLAvljO+ic42PlR49YUwHUelI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","jsxDEV","_jsxDEV","App","_s","messages","setMessages","socket","setSocket","selectedUser","setSelectedUser","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","prevMessages","close","sendMessage","text","selectedEmoji","readyState","OPEN","message","timestamp","Date","toISOString","sender","send","stringify","handleSelectUser","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  \n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://localhost:3000\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = (event) => {\n      const receivedMessage = JSON.parse(event.data);\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n    };\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    // Gửi tin nhắn\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n    }\n  };\n\n  const handleSelectUser = (user) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <div className=\"App\">\n      {selectedUser && (\n        <ChatContainer\n          messages={messages}\n          sendMessage={sendMessage}\n          selectedUser={selectedUser}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGtDC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACtDJ,SAAS,CAACG,SAAS,CAAC;IAEpBA,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC;IACDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/B,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MAC9Cf,WAAW,CAAEgB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,eAAe,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,MAAM;MACXP,SAAS,CAACY,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,aAAa,KAAK;IAC3C;IACA,IAAInB,MAAM,IAAIA,MAAM,CAACoB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;MAClD,MAAMC,OAAO,GAAG;QACdJ,IAAI,EAAEA,IAAI,IAAIC,aAAa,GAAI,IAAGA,aAAc,EAAC,GAAG,EAAE,CAAC;QACvDI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,MAAM,EAAE;MACV,CAAC;MACD1B,MAAM,CAAC2B,IAAI,CAACf,IAAI,CAACgB,SAAS,CAACN,OAAO,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIC,IAAI,IAAK;IACjC3B,eAAe,CAAC2B,IAAI,CAAC;EACvB,CAAC;EAED,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB9B,YAAY,iBACXP,OAAA,CAACF,aAAa;MACZK,QAAQ,EAAEA,QAAS;MACnBmB,WAAW,EAAEA,WAAY;MACzBf,YAAY,EAAEA;IAAa;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvC,EAAA,CAlDQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}