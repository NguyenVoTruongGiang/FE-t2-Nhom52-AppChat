{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useWebSocket = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\n  useEffect(() => {\n    const newSocket = new WebSocket(url);\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connected successfully.\");\n    };\n    newSocket.onmessage = event => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (receivedMessage.event) {\n          setMessages(prevMessages => [...prevMessages, receivedMessage]);\n          if (receivedMessage.event === \"USER_LIST\") {\n            setUsers(receivedMessage.data.users);\n          }\n        } else {\n          console.error('Tin nhắn nhận được có cấu trúc không hợp lệ:', receivedMessage);\n        }\n      } catch (error) {\n        console.error('không gửi được tin lên server:', error);\n      }\n    };\n    newSocket.onclose = () => {\n      console.log(\"WebSocket closed.\");\n    };\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      const savedUsers = localStorage.getItem(`users_${currentUser}`);\n      if (savedUsers) {\n        setUsers(JSON.parse(savedUsers));\n      } else {\n        setUsers([]);\n      }\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem(`users_${currentUser}`, JSON.stringify(users));\n    }\n  }, [users, currentUser]);\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(message);\n    } else {\n      console.error(\"WebSocket is not open.\");\n    }\n  };\n  const registerUser = (username, password) => {\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"REGISTER\",\n        data: {\n          user: username,\n          pass: password\n        }\n      }\n    }));\n  };\n  const loginUser = (username, password) => {\n    setCurrentUser(username);\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"LOGIN\",\n        data: {\n          user: username,\n          pass: password\n        }\n      }\n    }));\n  };\n  const sendChatMessage = (type, to, message) => {\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"SEND_CHAT\",\n        data: {\n          type,\n          to,\n          mes: message\n        }\n      }\n    }));\n  };\n  const addUser = user => {\n    setUsers(prevUsers => [...prevUsers, user]);\n  };\n  return {\n    messages,\n    sendMessage,\n    registerUser,\n    loginUser,\n    sendChatMessage,\n    users,\n    addUser\n  };\n};\n_s(useWebSocket, \"9X87NXIF5L2S70KH++fG8WeoFSA=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","_s","messages","setMessages","socket","setSocket","users","setUsers","currentUser","setCurrentUser","url","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","prevMessages","error","onclose","readyState","OPEN","close","savedUsers","localStorage","getItem","setItem","stringify","sendMessage","message","send","registerUser","username","password","action","user","pass","loginUser","sendChatMessage","type","to","mes","addUser","prevUsers"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useWebSocket = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\r\n\r\n  useEffect(() => {\r\n    const newSocket = new WebSocket(url);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket connected successfully.\");\r\n    };\r\n\r\n    newSocket.onmessage = (event) => {\r\n      try {\r\n        const receivedMessage = JSON.parse(event.data);\r\n        if (receivedMessage.event) {\r\n          setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n          if (receivedMessage.event === \"USER_LIST\") {\r\n            setUsers(receivedMessage.data.users);\r\n          }\r\n        } else {\r\n          console.error('Tin nhắn nhận được có cấu trúc không hợp lệ:', receivedMessage);\r\n        }\r\n      } catch (error) {\r\n        console.error('không gửi được tin lên server:', error);\r\n      }\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket closed.\");\r\n    };\r\n\r\n    return () => {\r\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n        newSocket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const savedUsers = localStorage.getItem(`users_${currentUser}`);\r\n      if (savedUsers) {\r\n        setUsers(JSON.parse(savedUsers));\r\n      } else {\r\n        setUsers([]);\r\n      }\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      localStorage.setItem(`users_${currentUser}`, JSON.stringify(users));\r\n    }\r\n  }, [users, currentUser]);\r\n\r\n  const sendMessage = (message) => {\r\n    if (socket && socket.readyState === WebSocket.OPEN) {\r\n      socket.send(message);\r\n    } else {\r\n      console.error(\"WebSocket is not open.\");\r\n    }\r\n  };\r\n\r\n  const registerUser = (username, password) => {\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: { event: \"REGISTER\", data: { user: username, pass: password } },\r\n      })\r\n    );\r\n  };\r\n\r\n  const loginUser = (username, password) => {\r\n    setCurrentUser(username);\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: { event: \"LOGIN\", data: { user: username, pass: password } },\r\n      })\r\n    );\r\n  };\r\n\r\n  const sendChatMessage = (type, to, message) => {\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: { event: \"SEND_CHAT\", data: { type, to, mes: message } },\r\n      })\r\n    );\r\n  };\r\n\r\n  const addUser = (user) => {\r\n    setUsers((prevUsers) => [...prevUsers, user]);\r\n  };\r\n\r\n  return { messages, sendMessage, registerUser, loginUser, sendChatMessage, users, addUser };\r\n};\r\n\r\nexport default useWebSocket;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMY,GAAG,GAAG,oCAAoC;EAEhDX,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,IAAIC,SAAS,CAACF,GAAG,CAAC;IACpCL,SAAS,CAACM,SAAS,CAAC;IAEpBA,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC;IAEDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/B,IAAI;QACF,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QAC9C,IAAIH,eAAe,CAACD,KAAK,EAAE;UACzBd,WAAW,CAAEmB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,eAAe,CAAC,CAAC;UACjE,IAAIA,eAAe,CAACD,KAAK,KAAK,WAAW,EAAE;YACzCV,QAAQ,CAACW,eAAe,CAACG,IAAI,CAACf,KAAK,CAAC;UACtC;QACF,CAAC,MAAM;UACLQ,OAAO,CAACS,KAAK,CAAC,8CAA8C,EAAEL,eAAe,CAAC;QAChF;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDZ,SAAS,CAACa,OAAO,GAAG,MAAM;MACxBV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,OAAO,MAAM;MACX,IAAIJ,SAAS,IAAIA,SAAS,CAACc,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;QACxDf,SAAS,CAACgB,KAAK,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,EAAE;MACf,MAAMoB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAE,SAAQtB,WAAY,EAAC,CAAC;MAC/D,IAAIoB,UAAU,EAAE;QACdrB,QAAQ,CAACY,IAAI,CAACC,KAAK,CAACQ,UAAU,CAAC,CAAC;MAClC,CAAC,MAAM;QACLrB,QAAQ,CAAC,EAAE,CAAC;MACd;IACF;EACF,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EAEjBT,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,EAAE;MACfqB,YAAY,CAACE,OAAO,CAAE,SAAQvB,WAAY,EAAC,EAAEW,IAAI,CAACa,SAAS,CAAC1B,KAAK,CAAC,CAAC;IACrE;EACF,CAAC,EAAE,CAACA,KAAK,EAAEE,WAAW,CAAC,CAAC;EAExB,MAAMyB,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAI9B,MAAM,IAAIA,MAAM,CAACqB,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MAClDtB,MAAM,CAAC+B,IAAI,CAACD,OAAO,CAAC;IACtB,CAAC,MAAM;MACLpB,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED,MAAMa,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC3CL,WAAW,CACTd,IAAI,CAACa,SAAS,CAAC;MACbO,MAAM,EAAE,QAAQ;MAChBlB,IAAI,EAAE;QAAEJ,KAAK,EAAE,UAAU;QAAEI,IAAI,EAAE;UAAEmB,IAAI,EAAEH,QAAQ;UAAEI,IAAI,EAAEH;QAAS;MAAE;IACtE,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMI,SAAS,GAAGA,CAACL,QAAQ,EAAEC,QAAQ,KAAK;IACxC7B,cAAc,CAAC4B,QAAQ,CAAC;IACxBJ,WAAW,CACTd,IAAI,CAACa,SAAS,CAAC;MACbO,MAAM,EAAE,QAAQ;MAChBlB,IAAI,EAAE;QAAEJ,KAAK,EAAE,OAAO;QAAEI,IAAI,EAAE;UAAEmB,IAAI,EAAEH,QAAQ;UAAEI,IAAI,EAAEH;QAAS;MAAE;IACnE,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMK,eAAe,GAAGA,CAACC,IAAI,EAAEC,EAAE,EAAEX,OAAO,KAAK;IAC7CD,WAAW,CACTd,IAAI,CAACa,SAAS,CAAC;MACbO,MAAM,EAAE,QAAQ;MAChBlB,IAAI,EAAE;QAAEJ,KAAK,EAAE,WAAW;QAAEI,IAAI,EAAE;UAAEuB,IAAI;UAAEC,EAAE;UAAEC,GAAG,EAAEZ;QAAQ;MAAE;IAC/D,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMa,OAAO,GAAIP,IAAI,IAAK;IACxBjC,QAAQ,CAAEyC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAER,IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,OAAO;IAAEtC,QAAQ;IAAE+B,WAAW;IAAEG,YAAY;IAAEM,SAAS;IAAEC,eAAe;IAAErC,KAAK;IAAEyC;EAAQ,CAAC;AAC5F,CAAC;AAAC9C,EAAA,CApGID,YAAY;AAsGlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}