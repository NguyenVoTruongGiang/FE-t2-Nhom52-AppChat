{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";import ChatContainer from\"./component/ChatContainer\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([]);const[socket,setSocket]=useState(null);const[clientUUID,setClientUUID]=useState(null);useEffect(()=>{const newSocket=new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");setSocket(newSocket);newSocket.onopen=()=>{console.log(\"WebSocket connection established.\");};newSocket.onmessage=event=>{const receivedMessage=JSON.parse(event.data);if(receivedMessage.type==='uuid'){setClientUUID(receivedMessage.uuid);// Lưu UUID của client\n}else{// Xử lý tin nhắn khác nếu cần\n}setMessages(prevMessages=>[...prevMessages,receivedMessage]);};return()=>{newSocket.close();};},[]);const sendMessage=(text,selectedEmoji)=>{if((text.trim()!==\"\"||selectedEmoji!==null)&&socket&&socket.readyState===WebSocket.OPEN){const message={text:text+(selectedEmoji?\" \".concat(selectedEmoji):\"\"),timestamp:new Date().toISOString(),sender:\"me\"};socket.send(JSON.stringify(message));setMessages(prevMessages=>[...prevMessages,message]);}else{console.error(\"WebSocket connection is not established yet or is not in OPEN state.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(ChatContainer,{messages:messages,sendMessage:sendMessage})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","jsx","_jsx","App","messages","setMessages","socket","setSocket","clientUUID","setClientUUID","newSocket","WebSocket","onopen","console","log","onmessage","event","receivedMessage","JSON","parse","data","type","uuid","prevMessages","close","sendMessage","text","selectedEmoji","trim","readyState","OPEN","message","concat","timestamp","Date","toISOString","sender","send","stringify","error","className","children"],"sources":["D:/demoReact/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ChatContainer from \"./component/ChatContainer\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [clientUUID, setClientUUID] = useState(null); \n\n  useEffect(() => {\n    const newSocket = new WebSocket(\"ws://140.238.54.136:8080/chat/chat\");\n    setSocket(newSocket);\n\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connection established.\");\n    };\n    newSocket.onmessage = (event) => {\n      const receivedMessage = JSON.parse(event.data);\n      if (receivedMessage.type === 'uuid') {\n        setClientUUID(receivedMessage.uuid); // Lưu UUID của client\n      } else {\n        // Xử lý tin nhắn khác nếu cần\n      }\n      setMessages((prevMessages) => [...prevMessages, receivedMessage]);\n    };\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const sendMessage = (text, selectedEmoji) => {\n    if (\n      (text.trim() !== \"\" || selectedEmoji !== null) &&\n      socket &&\n      socket.readyState === WebSocket.OPEN\n    ) {\n      const message = {\n        text: text + (selectedEmoji ? ` ${selectedEmoji}` : \"\"),\n        timestamp: new Date().toISOString(),\n        sender: \"me\",\n      };\n      socket.send(JSON.stringify(message));\n      setMessages((prevMessages) => [...prevMessages, message]);\n    } else {\n      console.error(\n        \"WebSocket connection is not established yet or is not in OPEN state.\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <ChatContainer messages={messages} sendMessage={sendMessage} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,SAAS,CAAG,GAAI,CAAAC,SAAS,CAAC,oCAAoC,CAAC,CACrEJ,SAAS,CAACG,SAAS,CAAC,CAEpBA,SAAS,CAACE,MAAM,CAAG,IAAM,CACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAClD,CAAC,CACDJ,SAAS,CAACK,SAAS,CAAIC,KAAK,EAAK,CAC/B,KAAM,CAAAC,eAAe,CAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC,CAC9C,GAAIH,eAAe,CAACI,IAAI,GAAK,MAAM,CAAE,CACnCZ,aAAa,CAACQ,eAAe,CAACK,IAAI,CAAC,CAAE;AACvC,CAAC,IAAM,CACL;AAAA,CAEFjB,WAAW,CAAEkB,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEN,eAAe,CAAC,CAAC,CACnE,CAAC,CAED,MAAO,IAAM,CACXP,SAAS,CAACc,KAAK,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,WAAW,CAAGA,CAACC,IAAI,CAAEC,aAAa,GAAK,CAC3C,GACE,CAACD,IAAI,CAACE,IAAI,CAAC,CAAC,GAAK,EAAE,EAAID,aAAa,GAAK,IAAI,GAC7CrB,MAAM,EACNA,MAAM,CAACuB,UAAU,GAAKlB,SAAS,CAACmB,IAAI,CACpC,CACA,KAAM,CAAAC,OAAO,CAAG,CACdL,IAAI,CAAEA,IAAI,EAAIC,aAAa,KAAAK,MAAA,CAAOL,aAAa,EAAK,EAAE,CAAC,CACvDM,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCC,MAAM,CAAE,IACV,CAAC,CACD9B,MAAM,CAAC+B,IAAI,CAACnB,IAAI,CAACoB,SAAS,CAACP,OAAO,CAAC,CAAC,CACpC1B,WAAW,CAAEkB,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEQ,OAAO,CAAC,CAAC,CAC3D,CAAC,IAAM,CACLlB,OAAO,CAAC0B,KAAK,CACX,sEACF,CAAC,CACH,CACF,CAAC,CAED,mBACErC,IAAA,QAAKsC,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBvC,IAAA,CAACF,aAAa,EAACI,QAAQ,CAAEA,QAAS,CAACqB,WAAW,CAAEA,WAAY,CAAE,CAAC,CAC5D,CAAC,CAEV,CAEA,cAAe,CAAAtB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}