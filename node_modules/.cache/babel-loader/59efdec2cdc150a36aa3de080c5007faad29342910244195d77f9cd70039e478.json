{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nconst useWebSocket = currentUser => {\n  _s();\n  const messagesRef = useRef([]);\n  const usersRef = useRef(() => {\n    const savedUsers = localStorage.getItem(`users_${currentUser}`);\n    return savedUsers ? JSON.parse(savedUsers) : [];\n  });\n  const socketRef = useRef(null);\n  const isConnectedRef = useRef(false);\n  const isLoggedInRef = useRef(false);\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\n  useEffect(() => {\n    if (!socketRef.current) {\n      const newSocket = new WebSocket(url);\n      socketRef.current = newSocket;\n      newSocket.onopen = () => {\n        if (!isConnectedRef.current) {\n          console.log(\"WebSocket connected successfully.\");\n          isConnectedRef.current = true;\n        }\n      };\n      newSocket.onmessage = event => {\n        console.log('Received message from server:', event.data);\n        try {\n          const receivedMessage = JSON.parse(event.data);\n          console.log('Parsed message:', receivedMessage);\n          messagesRef.current = [...messagesRef.current, receivedMessage];\n\n          // Nếu nhận được tin nhắn thành công về việc đăng nhập, đặt isLoggedInRef thành true\n          if (receivedMessage.event === \"LOGIN\" && receivedMessage.status === \"success\") {\n            isLoggedInRef.current = true;\n          }\n        } catch (error) {\n          console.error('Failed to parse message from the server:', error);\n        }\n      };\n      newSocket.onclose = () => {\n        console.log(\"WebSocket closed.\");\n        socketRef.current = null;\n        isConnectedRef.current = false;\n      };\n      return () => {\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n          socketRef.current.close();\n        }\n      };\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    localStorage.setItem(`users_${currentUser}`, JSON.stringify(usersRef.current()));\n  }, [usersRef, currentUser]);\n  const sendMessage = message => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(message);\n    } else {\n      console.error(\"WebSocket is not open.\");\n    }\n  };\n  const registerUser = (username, password) => {\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"REGISTER\",\n        data: {\n          user: username,\n          pass: password\n        }\n      }\n    }));\n  };\n  const loginUser = (username, password) => {\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"LOGIN\",\n        data: {\n          user: username,\n          pass: password\n        }\n      }\n    }));\n    if (isLoggedInRef.current) {\n      console.log(\"User is already logged in.\");\n      return;\n    }\n  };\n  const sendChatMessage = (type, to, message) => {\n    sendMessage(JSON.stringify({\n      action: \"onchat\",\n      data: {\n        event: \"SEND_CHAT\",\n        data: {\n          type: type,\n          to: to,\n          mes: message\n        }\n      }\n    }));\n  };\n  const addUser = user => {\n    usersRef.current = [...usersRef.current, user];\n  };\n  return {\n    messages: messagesRef.current,\n    sendMessage,\n    registerUser,\n    loginUser,\n    sendChatMessage,\n    users: usersRef.current(),\n    addUser\n  };\n};\n_s(useWebSocket, \"qrLACwOVV3ORCmFFdu5F9n8hLvQ=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useWebSocket","currentUser","_s","messagesRef","usersRef","savedUsers","localStorage","getItem","JSON","parse","socketRef","isConnectedRef","isLoggedInRef","url","current","newSocket","WebSocket","onopen","console","log","onmessage","event","data","receivedMessage","status","error","onclose","readyState","OPEN","close","setItem","stringify","sendMessage","message","send","registerUser","username","password","action","user","pass","loginUser","sendChatMessage","type","to","mes","addUser","messages","users"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nconst useWebSocket = (currentUser) => {\r\n  const messagesRef = useRef([]);\r\n  const usersRef = useRef(() => {\r\n    const savedUsers = localStorage.getItem(`users_${currentUser}`);\r\n    return savedUsers ? JSON.parse(savedUsers) : [];\r\n  });\r\n  const socketRef = useRef(null);\r\n  const isConnectedRef = useRef(false);\r\n  const isLoggedInRef = useRef(false);\r\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\r\n\r\n  useEffect(() => {\r\n    if (!socketRef.current) {\r\n      const newSocket = new WebSocket(url);\r\n      socketRef.current = newSocket;\r\n\r\n      newSocket.onopen = () => {\r\n        if (!isConnectedRef.current) {\r\n          console.log(\"WebSocket connected successfully.\");\r\n          isConnectedRef.current = true;\r\n        }\r\n      };\r\n\r\n      newSocket.onmessage = (event) => {\r\n        console.log('Received message from server:', event.data);\r\n        try {\r\n          const receivedMessage = JSON.parse(event.data);\r\n          console.log('Parsed message:', receivedMessage);\r\n          messagesRef.current = [...messagesRef.current, receivedMessage];\r\n\r\n          // Nếu nhận được tin nhắn thành công về việc đăng nhập, đặt isLoggedInRef thành true\r\n          if (receivedMessage.event === \"LOGIN\" && receivedMessage.status === \"success\") {\r\n            isLoggedInRef.current = true;\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to parse message from the server:', error);\r\n        }\r\n      };\r\n\r\n      newSocket.onclose = () => {\r\n        console.log(\"WebSocket closed.\");\r\n        socketRef.current = null;\r\n        isConnectedRef.current = false;\r\n      };\r\n\r\n      return () => {\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n          socketRef.current.close();\r\n        }\r\n      };\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`users_${currentUser}`, JSON.stringify(usersRef.current()));\r\n  }, [usersRef, currentUser]);\r\n\r\n  const sendMessage = (message) => {\r\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n      socketRef.current.send(message);\r\n    } else {\r\n      console.error(\"WebSocket is not open.\");\r\n    }\r\n  };\r\n\r\n  const registerUser = (username, password) => {\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: {\r\n          event: \"REGISTER\",\r\n          data: {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const loginUser = (username, password) => {\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: {\r\n          event: \"LOGIN\",\r\n          data: {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        }\r\n      })\r\n    );\r\n    if (isLoggedInRef.current) {\r\n      console.log(\"User is already logged in.\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = (type, to, message) => {\r\n    sendMessage(\r\n      JSON.stringify({\r\n        action: \"onchat\",\r\n        data: {\r\n          event: \"SEND_CHAT\",\r\n          data: {\r\n            type: type,\r\n            to: to,\r\n            mes: message\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const addUser = (user) => {\r\n    usersRef.current = [...usersRef.current, user];\r\n  };\r\n\r\n  return { messages: messagesRef.current, sendMessage, registerUser, loginUser, sendChatMessage, users: usersRef.current(), addUser };\r\n};\r\n\r\nexport default useWebSocket;  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}