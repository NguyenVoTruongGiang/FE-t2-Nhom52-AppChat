{"ast":null,"code":"var _jsxFileName = \"D:\\\\demoReact\\\\my-app\\\\src\\\\component\\\\ChatContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport useWebSocket from '../hooks/useWebSocket';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatContainer() {\n  _s();\n  const {\n    messages,\n    sendMessage,\n    users,\n    addUser\n  } = useWebSocket();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\n  const [newUser, setNewUser] = useState('');\n  const [selectedUserName, setSelectedUserName] = useState(''); // Thêm state để lưu trữ tên người dùng được chọn\n\n  useEffect(() => {\n    if (selectedUser) {\n      const filteredMessages = messages.filter(message => message.data.data.sender === selectedUser || message.data.data.recipient === selectedUser);\n      setCurrentUserMessages(filteredMessages);\n    }\n  }, [selectedUser, messages]);\n  const handleAddUser = () => {\n    if (newUser.trim()) {\n      addUser(newUser);\n      setNewUser('');\n    }\n  };\n  const handleSelectUser = user => {\n    setSelectedUser(user);\n    setSelectedUserName(user); // Cập nhật tên người dùng được chọn\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list\",\n          children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `user-item ${selectedUser === user ? 'selected' : ''}`,\n            onClick: () => handleSelectUser(user),\n            children: user\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newUser,\n            onChange: e => setNewUser(e.target.value),\n            placeholder: \"Add new user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddUser,\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: selectedUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \" \", currentUserMessages.length > 0 ? currentUserMessages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n          text: message.data.data.mes,\n          sender: message.data.data.sender === selectedUser ? 'me' : 'you' // Gán loại tin nhắn tương ứng\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a user to send the message.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatContainer, \"EOgKwic4QC0Ju+aO61QBu95Slo4=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","useEffect","Message","MessageInput","useWebSocket","jsxDEV","_jsxDEV","ChatContainer","_s","messages","sendMessage","users","addUser","selectedUser","setSelectedUser","currentUserMessages","setCurrentUserMessages","newUser","setNewUser","selectedUserName","setSelectedUserName","filteredMessages","filter","message","data","sender","recipient","handleAddUser","trim","handleSelectUser","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","type","value","onChange","e","target","placeholder","length","text","mes","_c","$RefreshReg$"],"sources":["D:/demoReact/my-app/src/component/ChatContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Message from './Message';\r\nimport MessageInput from './MessageInput';\r\nimport useWebSocket from '../hooks/useWebSocket';\r\nimport '../App.css';\r\n\r\nfunction ChatContainer() {\r\n  const { messages, sendMessage, users, addUser } = useWebSocket();\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [currentUserMessages, setCurrentUserMessages] = useState([]);\r\n  const [newUser, setNewUser] = useState('');\r\n  const [selectedUserName, setSelectedUserName] = useState(''); // Thêm state để lưu trữ tên người dùng được chọn\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      const filteredMessages = messages.filter(\r\n        (message) =>\r\n          message.data.data.sender === selectedUser ||\r\n          message.data.data.recipient === selectedUser\r\n      );\r\n      setCurrentUserMessages(filteredMessages);\r\n    }\r\n  }, [selectedUser, messages]);\r\n\r\n  const handleAddUser = () => {\r\n    if (newUser.trim()) {\r\n      addUser(newUser);\r\n      setNewUser('');\r\n    }\r\n  };\r\n\r\n  const handleSelectUser = (user) => {\r\n    setSelectedUser(user);\r\n    setSelectedUserName(user); // Cập nhật tên người dùng được chọn\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"show-chat\">\r\n        <div className=\"user-info\">\r\n          <h2>Users</h2>\r\n          <div className=\"user-list\">\r\n            {users.map((user, index) => (\r\n              <div\r\n                key={index}\r\n                className={`user-item ${selectedUser === user ? 'selected' : ''}`}\r\n                onClick={() => handleSelectUser(user)}\r\n              >\r\n                {user}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"add-user\">\r\n            <input\r\n              type=\"text\"\r\n              value={newUser}\r\n              onChange={(e) => setNewUser(e.target.value)}\r\n              placeholder=\"Add new user\"\r\n            />\r\n            <button onClick={handleAddUser}>Add User</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n          <div className=\"chat-header\">{selectedUserName}</div> {/* Hiển thị tên người dùng ở góc trên trái */}\r\n          {currentUserMessages.length > 0 ? (\r\n            currentUserMessages.map((message, index) => (\r\n              <Message\r\n                key={index}\r\n                text={message.data.data.mes}\r\n                sender={message.data.data.sender === selectedUser ? 'me' : 'you'} // Gán loại tin nhắn tương ứng\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>Please select a user to send the message.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <MessageInput sendMessage={sendMessage} selectedUser={selectedUser} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}