{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useWebSocket = currentUser => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const [users, setUsers] = useState(() => {\n    const savedUsers = localStorage.getItem(`users_${currentUser}`);\n    return savedUsers ? JSON.parse(savedUsers) : [];\n  });\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\n  useEffect(() => {\n    const newSocket = new WebSocket(url);\n    setSocket(newSocket);\n    newSocket.onopen = () => {\n      console.log(\"WebSocket connected successfully.\");\n    };\n    newSocket.onmessage = event => {\n      console.log('Received message from server:', event.data);\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log('Parsed message:', receivedMessage);\n\n        // Kiểm tra nếu tin nhắn từ máy chủ yêu cầu xác thực người dùng\n        if (receivedMessage.event === \"AUTH\" && receivedMessage.status === \"error\" && receivedMessage.mes === \"User not Login\") {\n          // Xử lý trường hợp người dùng chưa đăng nhập\n          console.log(\"User not logged in. Redirect or display login prompt.\");\n          // Ví dụ: Hiển thị cảnh báo hoặc chuyển hướng đến trang đăng nhập\n          return;\n        }\n\n        // Xử lý tin nhắn khác từ máy chủ\n        setMessages(prevMessages => [...prevMessages, receivedMessage]);\n      } catch (error) {\n        console.error('Failed to send message to the server:', error);\n      }\n    };\n    newSocket.onclose = () => {\n      console.log(\"WebSocket closed.\");\n    };\n    return () => {\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\n        newSocket.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(`users_${currentUser}`, JSON.stringify(users));\n  }, [users, currentUser]);\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(message);\n    } else {\n      console.error(\"WebSocket is not open.\");\n    }\n  };\n\n  // Các hàm khác (registerUser, loginUser, sendChatMessage, addUser) ở đây\n\n  return {\n    messages,\n    sendMessage,\n    registerUser,\n    loginUser,\n    sendChatMessage,\n    users,\n    addUser\n  };\n};\n_s(useWebSocket, \"ObplpR7DU9Ctu624eisBvpkPgsc=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","currentUser","_s","messages","setMessages","socket","setSocket","users","setUsers","savedUsers","localStorage","getItem","JSON","parse","url","newSocket","WebSocket","onopen","console","log","onmessage","event","data","receivedMessage","status","mes","prevMessages","error","onclose","readyState","OPEN","close","setItem","stringify","sendMessage","message","send","registerUser","loginUser","sendChatMessage","addUser"],"sources":["D:/demoReact/my-app/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useWebSocket = (currentUser) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n  const [users, setUsers] = useState(() => {\r\n    const savedUsers = localStorage.getItem(`users_${currentUser}`);\r\n    return savedUsers ? JSON.parse(savedUsers) : [];\r\n  });\r\n  const url = \"ws://140.238.54.136:8080/chat/chat\";\r\n\r\n  useEffect(() => {\r\n    const newSocket = new WebSocket(url);\r\n    setSocket(newSocket);\r\n\r\n    newSocket.onopen = () => {\r\n      console.log(\"WebSocket connected successfully.\");\r\n    };\r\n\r\n    newSocket.onmessage = (event) => {\r\n      console.log('Received message from server:', event.data);\r\n      try {\r\n        const receivedMessage = JSON.parse(event.data);\r\n        console.log('Parsed message:', receivedMessage);\r\n\r\n        // Kiểm tra nếu tin nhắn từ máy chủ yêu cầu xác thực người dùng\r\n        if (receivedMessage.event === \"AUTH\" && receivedMessage.status === \"error\" && receivedMessage.mes === \"User not Login\") {\r\n          // Xử lý trường hợp người dùng chưa đăng nhập\r\n          console.log(\"User not logged in. Redirect or display login prompt.\");\r\n          // Ví dụ: Hiển thị cảnh báo hoặc chuyển hướng đến trang đăng nhập\r\n          return;\r\n        }\r\n\r\n        // Xử lý tin nhắn khác từ máy chủ\r\n        setMessages((prevMessages) => [...prevMessages, receivedMessage]);\r\n      } catch (error) {\r\n        console.error('Failed to send message to the server:', error);\r\n      }\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log(\"WebSocket closed.\");\r\n    };\r\n\r\n    return () => {\r\n      if (newSocket && newSocket.readyState === WebSocket.OPEN) {\r\n        newSocket.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`users_${currentUser}`, JSON.stringify(users));\r\n  }, [users, currentUser]);\r\n\r\n  const sendMessage = (message) => {\r\n    if (socket && socket.readyState === WebSocket.OPEN) {\r\n      socket.send(message);\r\n    } else {\r\n      console.error(\"WebSocket is not open.\");\r\n    }\r\n  };\r\n\r\n  // Các hàm khác (registerUser, loginUser, sendChatMessage, addUser) ở đây\r\n\r\n  return { messages, sendMessage, registerUser, loginUser, sendChatMessage, users, addUser };\r\n};\r\n\r\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,WAAW,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACvC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAE,SAAQV,WAAY,EAAC,CAAC;IAC/D,OAAOQ,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EACF,MAAMK,GAAG,GAAG,oCAAoC;EAEhDf,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,IAAIC,SAAS,CAACF,GAAG,CAAC;IACpCR,SAAS,CAACS,SAAS,CAAC;IAEpBA,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC;IAEDJ,SAAS,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/BH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAACC,IAAI,CAAC;MACxD,IAAI;QACF,MAAMC,eAAe,GAAGX,IAAI,CAACC,KAAK,CAACQ,KAAK,CAACC,IAAI,CAAC;QAC9CJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,eAAe,CAAC;;QAE/C;QACA,IAAIA,eAAe,CAACF,KAAK,KAAK,MAAM,IAAIE,eAAe,CAACC,MAAM,KAAK,OAAO,IAAID,eAAe,CAACE,GAAG,KAAK,gBAAgB,EAAE;UACtH;UACAP,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;UACpE;UACA;QACF;;QAEA;QACAf,WAAW,CAAEsB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,eAAe,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAEDZ,SAAS,CAACa,OAAO,GAAG,MAAM;MACxBV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,OAAO,MAAM;MACX,IAAIJ,SAAS,IAAIA,SAAS,CAACc,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;QACxDf,SAAS,CAACgB,KAAK,CAAC,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENhC,SAAS,CAAC,MAAM;IACdW,YAAY,CAACsB,OAAO,CAAE,SAAQ/B,WAAY,EAAC,EAAEW,IAAI,CAACqB,SAAS,CAAC1B,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACA,KAAK,EAAEN,WAAW,CAAC,CAAC;EAExB,MAAMiC,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAI9B,MAAM,IAAIA,MAAM,CAACwB,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MAClDzB,MAAM,CAAC+B,IAAI,CAACD,OAAO,CAAC;IACtB,CAAC,MAAM;MACLjB,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;;EAED;;EAEA,OAAO;IAAExB,QAAQ;IAAE+B,WAAW;IAAEG,YAAY;IAAEC,SAAS;IAAEC,eAAe;IAAEhC,KAAK;IAAEiC;EAAQ,CAAC;AAC5F,CAAC;AAACtC,EAAA,CAhEIF,YAAY;AAkElB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}